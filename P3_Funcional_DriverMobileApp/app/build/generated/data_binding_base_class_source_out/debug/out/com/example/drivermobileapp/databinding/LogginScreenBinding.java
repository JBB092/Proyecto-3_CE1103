// Generated by view binder compiler. Do not edit!
package com.example.drivermobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.drivermobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LogginScreenBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonIniciarSesion;

  @NonNull
  public final EditText editTextCarnet;

  @NonNull
  public final EditText editTextNombre;

  @NonNull
  public final Toolbar toolbarLoggin;

  private LogginScreenBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonIniciarSesion,
      @NonNull EditText editTextCarnet, @NonNull EditText editTextNombre,
      @NonNull Toolbar toolbarLoggin) {
    this.rootView = rootView;
    this.buttonIniciarSesion = buttonIniciarSesion;
    this.editTextCarnet = editTextCarnet;
    this.editTextNombre = editTextNombre;
    this.toolbarLoggin = toolbarLoggin;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LogginScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LogginScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.loggin_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LogginScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonIniciarSesion;
      Button buttonIniciarSesion = ViewBindings.findChildViewById(rootView, id);
      if (buttonIniciarSesion == null) {
        break missingId;
      }

      id = R.id.editTextCarnet;
      EditText editTextCarnet = ViewBindings.findChildViewById(rootView, id);
      if (editTextCarnet == null) {
        break missingId;
      }

      id = R.id.editTextNombre;
      EditText editTextNombre = ViewBindings.findChildViewById(rootView, id);
      if (editTextNombre == null) {
        break missingId;
      }

      id = R.id.toolbarLoggin;
      Toolbar toolbarLoggin = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLoggin == null) {
        break missingId;
      }

      return new LogginScreenBinding((RelativeLayout) rootView, buttonIniciarSesion, editTextCarnet,
          editTextNombre, toolbarLoggin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
