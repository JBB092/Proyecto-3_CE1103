// Generated by view binder compiler. Do not edit!
package com.example.drivermobileapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.drivermobileapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PrincipalScreenBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonAmigos;

  @NonNull
  public final Button buttonCalificacion;

  @NonNull
  public final Button buttonCerrarSesion;

  @NonNull
  public final Button buttonSolicitarServicio;

  @NonNull
  public final TextView welcomeMessage;

  private PrincipalScreenBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonAmigos,
      @NonNull Button buttonCalificacion, @NonNull Button buttonCerrarSesion,
      @NonNull Button buttonSolicitarServicio, @NonNull TextView welcomeMessage) {
    this.rootView = rootView;
    this.buttonAmigos = buttonAmigos;
    this.buttonCalificacion = buttonCalificacion;
    this.buttonCerrarSesion = buttonCerrarSesion;
    this.buttonSolicitarServicio = buttonSolicitarServicio;
    this.welcomeMessage = welcomeMessage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PrincipalScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PrincipalScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.principal_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PrincipalScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAmigos;
      Button buttonAmigos = ViewBindings.findChildViewById(rootView, id);
      if (buttonAmigos == null) {
        break missingId;
      }

      id = R.id.buttonCalificacion;
      Button buttonCalificacion = ViewBindings.findChildViewById(rootView, id);
      if (buttonCalificacion == null) {
        break missingId;
      }

      id = R.id.buttonCerrarSesion;
      Button buttonCerrarSesion = ViewBindings.findChildViewById(rootView, id);
      if (buttonCerrarSesion == null) {
        break missingId;
      }

      id = R.id.buttonSolicitarServicio;
      Button buttonSolicitarServicio = ViewBindings.findChildViewById(rootView, id);
      if (buttonSolicitarServicio == null) {
        break missingId;
      }

      id = R.id.welcomeMessage;
      TextView welcomeMessage = ViewBindings.findChildViewById(rootView, id);
      if (welcomeMessage == null) {
        break missingId;
      }

      return new PrincipalScreenBinding((RelativeLayout) rootView, buttonAmigos, buttonCalificacion,
          buttonCerrarSesion, buttonSolicitarServicio, welcomeMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
